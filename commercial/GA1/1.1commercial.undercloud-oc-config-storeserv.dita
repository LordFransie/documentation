---
layout: default
title: "HP Helion OpenStack&#174; 1.1: Working with StoreServ Backends"
permalink: /helion/openstack/1.1/undercloud/oc/config/storeserv/
product: commercial.ga
product-version1: HP Helion OpenStack
product-version2: HP Helion OpenStack 1.1
role1: Systems Administrator 
role2: Cloud Architect 
role3: Storage Administrator 
role4: Network Administrator 
role5: Service Developer 
role6: Cloud Administrator 
role7: Application Developer 
role8: Network Engineer 
authors: Paul F

---
<!--PUBLISHED-->


<script>

function PageRefresh {
onLoad="window.refresh"
}

PageRefresh();

</script>

<!-- <p style="font-size: small;"> <a href="/helion/openstack/1.1/install-beta/kvm/">&#9664; PREV</a> | <a href="/helion/openstack/1.1/install-beta-overview/">&#9650; UP</a> | <a href="/helion/openstack/1.1/install-beta/esx/">NEXT &#9654;</a> </p> -->


# HP Helion OpenStack&#174; 1.1: Working with StoreServ Backends
[See the Helion OpenStack 1.0 version of this page](/helion/openstack/undercloud/oc/config/storeserv/)

Once you register the StoreServ systems as per your requirements, you can use the overcloud option in the Horizon undercloud dashboard for the following tasks:

* [Add Backend](#add-backend)

* [Expand Backend](#expand-backend)

* [Shrink Backend](#shrink-backend) 

* [Delete Backend](#delete-backend)

* [Generate Configuration](#generate-config)

* [Update Overcloud](#update-overcloud) 

* [Next Steps](#next-steps) 

### Add backend {#add-backend}

**Note**: Ensure that you allocate only those CPGs that will be used by this cloud. Changing any attributes of the CPG after allocation, may disrupt cloud functionality if the corresponding change is not updated in Sirius.

1. In the Configure Cloud page, click **StoreServ Backends** Tab to activate it.

	<a href="javascript:window.open('/content/documentation/media/undercloud-storeserv-add-backend.png','_blank','toolbar=no,menubar=no,resizable=yes,scrollbars=yes')">Configure Cloud StoreServ Option (opens in a new window)</a>

2. Click **Add Backend** displayed at the top to open the StoreServ Volume Backend page.

	<a href="javascript:window.open('/content/documentation/media/undercloud-storeserv-add-backendoption.png','_blank','toolbar=no,menubar=no,resizable=yes,scrollbars=yes')">StoreServ Volume Backend Page (opens in a new window)</a>

3. In the **Volume Backend Name** box, enter the name for the backend.

4. From the **Available StoreServ CPG Choices** box, select the CPG(s).

5. Click &rarr; to move the CPG(s)to the **Selected StoreServ Choices** box. 

5.  (Optional) Click **Choose All** displayed below the **Available StoreServ CPG Choices** box to select all the CPGs . 

7. (Optional) Click **Remove All** displayed below the **Selected StoreServ Choices** box or select the CPG(s) and click &larr;to move the CPGs back to **Available StoreServ Choices** box. 

8. Click **Add**.<br />On successful addition of backend, the backend displays in the Backend Mapping table in the Configure Cloud page. 

	<a href="javascript:window.open('/content/documentation/media/undercloud-storeserv-add-backendoption1.png','_blank','toolbar=no,menubar=no,resizable=yes,scrollbars=yes')">Backend Mapping Page (opens in a new window)</a>

	The status of the selected CPG is displayed as *Reserved* in the StoreServ page under the **Resources** Tab.<br />

  	<a href="javascript:window.open('/content/documentation/media/undercloud-storeserv-add-backendoption2.png','_blank','toolbar=no,menubar=no,resizable=yes,scrollbars=yes')">Common Provisioning Groups Page with the Reserved CPG (opens in a new window)</a>


<a href="#top" style="padding:14px 0px 14px 0px; text-decoration: none;"> Return to Top &#8593; </a>

### Expand backend {#expand-backend}

Expand backend option allocates new CPGs to an existing backend. You can select the required CPG(s) from the list of registered CPGs and add them to a backend that has been already configured.

To expand a backend, do the following:

1. In the Configure Cloud page, click **StoreServ Backends** Tab to activate it.<br /> The page displays a list of backends.<br />

	<a href="javascript:window.open('/content/documentation/media/undercloud-storeserv-expand-backend.png','_blank','toolbar=no,menubar=no,resizable=yes,scrollbars=yes')">Expand Backend Option (opens in a new window)</a>

2. Click **Expand Backend** against the backend that you want to expand.<br /> Expand StoreServ Volume Backend page is displayed.<br />

	<a href="javascript:window.open('/content/documentation/media/undercloud-storeserv-expand-backend1.png','_blank','toolbar=no,menubar=no,resizable=yes,scrollbars=yes')">Expand StoreServ Volume Backend Page (opens in a new window)</a>


3. From the **Available StoreServ CPG Choices** box, select the CPG.

4.  Click &rarr; to move the CPG(s)to the **Selected StoreServ Choices** box.

5.  (Optional) Click **Choose All** displayed below the **Available StoreServ CPG Choices** box to select and move all the CPGs to the **Selected StoreServ Choices** box. 

7. (Optional) Click **Remove All** displayed below the **Selected StoreServ Choices** box or select the CPG(s) and click &larr;to move the CPGs back to **Available StoreServ Choices** box.

8. Click **Update**.<br />On successful update, the number of CPGs mapped to the backend is updated and displays in the Backend Mapping table in the Configure Cloud page.<br />

	<a href="javascript:window.open('/content/documentation/media/undercloud-storeserv-expand-backend2.png','_blank','toolbar=no,menubar=no,resizable=yes,scrollbars=yes')">Expanded Backend in the Backend Mapping Table(opens in a new window)</a>


### Shrink backend {#shrink-backend}

This option allows you to remove the CPGs from the backend which are allocated to your cloud. To shrink the backend, do the following:

1. In the Configure Cloud page, click **StoreServ Backends** Tab to activate it.<br /> The page displays a list of backends.<br />

	<a href="javascript:window.open('/content/documentation/media/undercloud-storeserv-shrink-backend.png','_blank','toolbar=no,menubar=no,resizable=yes,scrollbars=yes')">Shrink Backend Option(opens in a new window)</a>

2. Click **More** drop-down list against the Volume Backend for which you want to reduce the CPGs and select **Shrink Backend**.<br /> Configure StoreServ Backend page is displayed.

3.  From the **Existing StoreServ CPGs** box, select the CPG.

4.  Click &rarr; to move the CPG(s)to the **Removed StoreServ CPGs** box.

4. (Optional) Click **Remove All** displayed below the **Existing StoreServ CPGs** box to move all the CPGs to **Removed StoreServ CPGs** box.


5. (Optional) Click **Select All** displayed below the **Removed StoreServ CPGs** box or select the CPG(s) and click &larr;to move the CPGs back to **Existing StoreServ CPGs** box.

6. Click **Update**.

	<a href="javascript:window.open('/content/documentation/media/undercloud-storeserv-shrink-backend1.png','_blank','toolbar=no,menubar=no,resizable=yes,scrollbars=yes')">Shrink Backend Option(opens in a new window)</a>
	
	<br />On successful update, the number of CPGs mapped to the backend is updated and displays in the Backend Mapping table in the Configure Cloud page.<br />

	<a href="javascript:window.open('/content/documentation/media/undercloud-storeserv-shrink-backend2.png','_blank','toolbar=no,menubar=no,resizable=yes,scrollbars=yes')">Backend Mapping Table with Reduced Number of Backends(opens in a new window)</a>

<a href="#top" style="padding:14px 0px 14px 0px; text-decoration: none;"> Return to Top &#8593; </a>

###Delete backend {#delete-backend}

Before you delete the backend CPG, detach the volumes from this CPG as the backend you delete will no longer be available. 

Do the following to delete a backend:

1. In the Configure Cloud page, click **StoreServ Backends** Tab to activate it.<br /> The page displays a list of backends.<br />

2. Click **More** drop-down list against the volume backend which you want to delete and select **Delete volume backend**.<br /> A confirmation dialog box is displayed.

3. Click **Delete volume backend** to delete or **Cancel** to cancel the process. 


### Generate configuration {#generate-config}

You can download the Cinder configuration relevant to HP 3PAR StoreServ for your cloud once you create the backend.

To generate configuration file, do the following:

1. In the Configure Cloud page, click **StoreServ Backends** Tab to activate it.<br /> The page displays a list of backends.<br />

	<a href="javascript:window.open('/content/documentation/media/undercloud-storeserv-generate-config.png','_blank','toolbar=no,menubar=no,resizable=yes,scrollbars=yes')">Generate Configuration Page (opens in a new window)</a>

2. Select the backend for which you want to generate the configuration file.

3. Click **Generate Config** displayed at the top of the page to display Download Storeserv Config page.<br /> The configuration file downloads automatically. 

4. (Optional) Click Download StoreServ Config link to download the file if the file does not automatically download .<br /> A dialog box is displayed.<br />

5. Click **OK** to download and save the file. <br />Once you download the configuration file, you can proceed to update the overcloud configuration.<br />

<a href="#top" style="padding:14px 0px 14px 0px; text-decoration: none;"> Return to Top &#8593; </a>

### Update Overcloud {#update-overcloud}

To update your overcloud with the changes, do the following:

1. SSH to the Seed as root from KVM host using the IP address of seed VM as defined in the environment variables file:

		# ssh root@<seed_VM_IP_address> 

2. View the list of files.

		# ls

	<!--3. Copy the overcloud template configuration file to `/root/overcloud-config.json` if `/root/overcloud-config.json` is absent.	3. Source the cloud configuration file to `/root/<environment variable file>` if it is absent.
  
 	# cp /root/tripleo/tripleo-incubator/scripts/ee-config.json /root/overcloud-config.json	4. Edit and update the /root/overcloud-config.json and add the JSON snippet(obtained from [Generate Config](#generate-config)). Ensure the JSON file format is unbroken. A sample of the file is given below:-->

3. Append the environment variables file with the JSON snippet(obtained from [Generate Config](#generate-config)). Ensure the JSON file format is unbroken. A sample of the file is given below:


		},
		  "3par": {
		    "DEFAULT": {
		      "enabled_backends": [
		        "CPG_db8b945c-b4f1-464d-9790-554d9b8c321e",
		        "CPG_f3740765-119f-4d0d-9bc5-c254cd0209f4",
		        "CPG_9531635c-d5a1-47d7-91e2-1e2a56b3d094",
		        "CPG_b86f8f87-d546-40b6-9ac5-3fa5169958dd"
		      ]
		    },
		    "CPG_db8b945c-b4f1-464d-9790-554d9b8c321e": {
		      "san_password": "3pardata",
		      "hp3par_username": "3paradm",
		      "volume_backend_name": "3par_backend",
		      "san_login": "3paradm",
		      "hp3par_api_url": "https://15.214.241.21:8080/api/v1",
		      "volume_driver": "cinder.volume.drivers.san.hp.hp_3par_iscsi.HP3PARISCSIDriver",
		      "hp3par_password": "3pardata",
		      "hp3par_cpg": "FC_r1",
		      "hp3par_iscsi_chap_enabled": "true",
		      "san_ip": "15.214.241.21",
		      "iscsi_ip_address": "10.1.0.200"
		    },
		    "CPG_f3740765-119f-4d0d-9bc5-c254cd0209f4": {
		      "san_password": "3pardata",
		      "hp3par_username": "3paradm",
		      "volume_backend_name": "3par_backend",
		      "san_login": "3paradm",
		      "hp3par_api_url": "https://15.214.241.21:8080/api/v1",
		      "volume_driver": "cinder.volume.drivers.san.hp.hp_3par_iscsi.HP3PARISCSIDriver",
		      "hp3par_password": "3pardata",
		      "hp3par_cpg": "FC_r61",
		      "hp3par_iscsi_chap_enabled": "true",
		      "san_ip": "15.214.241.21",
		      "iscsi_ip_address": "10.1.0.200"
		    },

	<!--**Note:** HP 3PAR iSCSI OpenStack driver provides the ability to select the best-fit target iSCSI port from a list of candidate ports. However, Sirius currently does not support this option. If you want to configure 3PAR iSCSI backend with more than one IP addresses, add the *hp3par&#095;iscsi_ips* with a comma-separated list of IP addresses in `/root/overcloud-config.json` instead of *iscsi&#095;ip&#095;address*. The addresses may define an IP port by using a colon (:) to separate the address from the port. Refer to the following example:

	
		"3par": {
		    "DEFAULT": {
		        "enabled_backends": [
		            "CPG_6287cd1a-f8fb-4e10-93b0-88152db3b5df"
		        ]
		    },
		    "CPG_6287cd1a-f8fb-4e10-93b0-88152db3b5df": {
		        "san_password": "3pardata",
		        "hp3par_username": "3paradm",
		        "volume_backend_name": "3par_backend",
		        "san_login": "3paradm",
		        "hp3par_api_url": "https://15.214.241.21:8080/api/v1",
		        "volume_driver": "cinder.volume.drivers.san.hp.hp_3par_iscsi.HP3PARISCSIDriver",
		        "hp3par_password": "3pardata",
		        "hp3par_cpg": "3par_iscsi",
		        "hp3par_iscsi_chap_enabled": "true",
		        "san_ip": "15.214.241.21",
		        "hp3par_iscsi_ips":"10.1.0.200,10.1.0.201:3030"
		    }
		  }-->
	
<!--5.Apply the configuration.

     	# source /root/tripleo/tripleo-incubator/scripts/hp_ced_load_config.sh /<environment variables file name>
	For example
		# source /root/tripleo/tripleo-incubator/scripts/hp_ced_load_config.sh /root/overcloud-config.json
2. Edit and update the `tripleo/configs/kvm-custom-ips.json` and add the JSON snippet(obtained from [Generate Config](#generate-config)). Ensure the JSON file format is unbroken. A sample of the file is given below:
			{
				"cloud_type": "KVM",
				"vsa_scale": 0,
				"vsa_ao_scale": 0,
				"so_swift_storage_scale": 0,
				"so_swift_proxy_scale": 0,
				"compute_scale": 4,
				"bridge_interface": "em2",
				"virtual_interface": "eth1",
				"fixed_range_cidr": "172.0.100.0/24",
				"control_virtual_router_id": "202",
				"baremetal": {
					"network_seed_ip": "192.168.130.3",
					"network_cidr": "192.168.130.0/24",
					"network_gateway": "192.168.130.1",
					"network_seed_range_start": "192.168.130.4",
					"network_seed_range_end": "192.168.130.22",
					"network_undercloud_range_start": "192.168.130.23",
					"network_undercloud_range_end": "192.168.130.126"
				},
				"neutron": {
					"public_interface_raw_device": "eth1",
					"overcloud_public_interface": "vlan331",
					"undercloud_public_interface": "eth1"
				},
				"ntp": {
					"overcloud_server": "16.110.135.123",
					"undercloud_server": "16.110.135.123"
				},
				"floating_ip": {
					"start": "192.168.131.2",
					"end": "192.168.131.245",
					"cidr": "192.168.131.0/24"
				},
				"svc": {
					"interface": "vlan332",
					"interface_default_route": "192.168.132.1",
					"allocate_start": "192.168.132.2",
					"allocate_end": "192.168.132.250",
					"allocate_cidr": "192.168.132.0/24",
					"overcloud_bridge_mappings": "svcnet1:br-svc",
					"overcloud_flat_networks": "svcnet1",
					"customer_router_ip": "192.168.130.1"
				},
				"codn": {
					"undercloud_http_proxy": "http://16.85.175.150:8080",
					"undercloud_https_proxy": "http://16.85.175.150:8080",
					"overcloud_http_proxy": "http://16.85.175.150:8080",
					"overcloud_https_proxy": "http://16.85.175.150:8080"
				},
	 		"3par": {
				"DEFAULT": {
					"enabled_backends": [
						"CPG_6287cd1a-f8fb-4e10-93b0-88152db3b5df",
						"CPG_b86f8f87-d546-40b6-9ac5-3fa5169958dd"
					]
				},
				"CPG_6287cd1a-f8fb-4e10-93b0-88152db3b5df": {
					"san_password": "3pardata",
					"hp3par_username": "3paradm",
					"volume_backend_name": "3pariscsi",
					"san_login": "3paradm",
					"hp3par_api_url": "https://15.214.241.21:8080/api/v1",
					"volume_driver": "cinder.volume.drivers.san.hp.hp_3par_iscsi.HP3PARISCSIDriver",
					"hp3par_password": "3pardata",
					"hp3par_cpg": "3par_iscsi",
					"hp3par_iscsi_chap_enabled": "true",
					"san_ip": "15.214.241.21",
					"iscsi_ip_address": "10.1.0.200"
				},
				"CPG_b86f8f87-d546-40b6-9ac5-3fa5169958dd": {
					"san_password": "3pardata",
					"hp3par_username": "3paradm",
					"volume_backend_name": "3par_FC",
					"san_login": "3paradm",
					"hp3par_api_url": "https://15.214.241.21:8080/api/v1",
					"volume_driver": "cinder.volume.drivers.san.hp.hp_3par_fc.HP3PARFCDriver",
					"hp3par_password": "3pardata",
					"hp3par_cpg": "3par_FC",
					"hp3par_iscsi_chap_enabled": "true",
					"san_ip": "15.214.241.21"
				}
			}
		}-->		
4.Source the environment variables from the environment variables file created during initial installation.<!-- based on your configuration and the details of the StoreVirtual scale specified in the `/root/overcloud-config.json`-->

    # source tripleo/tripleo-incubator/scripts/hp_ced_load_config.sh tripleo/configs/<environment variables file name>
		
  For example

	# source tripleo/tripleo-incubator/scripts/hp_ced_load_config.sh tripleo/configs/kvm-custom-ips.json 

5.Launch install script to update the overcloud.

		# bash -x /root/tripleo/tripleo-incubator/scripts/hp_ced_installer.sh --update-overcloud |& tee update-bv1.log

## Next Steps {#next-steps}

To use the newly added Cinder backend, create volume type and associate it with this backend using the [Horizon Overcloud Dashboard](/helion/openstack/1.1/map/volumetype/) or Cinder CLI. 


<a href="#top" style="padding:14px 0px 14px 0px; text-decoration: none;"> Return to Top &#8593; </a>

----
