---
layout: 1.0default-devplatform
permalink: /als/v1/admin/best-practices/logging-examples/
product: devplatform1.0
title: "HP Helion 1.0 Development Platform: Log Drain Examples"
product-version1: HP Helion Development Platform
product-version2: HP Helion Development Platform 1.0
role1: Application Developer
role2: Security Engineer
role3: ISV Developer 
role4: Service Developer
role5: Network Administrator
role6: Systems Administrator 
authors: Jayme P

---
<!--PUBLISHED-->

# HP Helion 1.0 Development Platform: Log Drain Examples 

[See the Helion 1.1 Development Platform version of this page](/helion/devplatform/1.1/als/admin/best-practices/logging-examples/)

Detailed instructions on how to use drains with third party log analysis
software or services:

-   [Papertrail](#logging-examples-papertrail)
-   [Loggly](#logging-examples-loggly)
-   [Splunk](#logging-examples-splunk)

**Note**: Do not forward both application and system logs to the same destination.

## Papertrail {#papertrail}

1.  [Create an account for Papertrail](https://papertrailapp.com/plans)
2.  In the Dashboard screen, click *Add Systems*.
	<img src="media/ppt1.png" />

3.  In the Setup Systems screen under *Other log methods*, click
    *Alternatives*.
	<img src="media/ppt2.png" />

4.  Choose option C: *My system's hostname changes* and give it a
    suitable name.
	<img src="media/ppt3.png" />
5.  Note down the **port number**. You need this later on.
	<img src="media/ppt4.png" />

6. Enable system logging (via udp) by executing the following kato command:
	
		kato log drain add drain-name udp://logs.papertrailapp.com:port#

**Note**: Papertrail requires systail log lines to have `<13>l` at the beginning of each line. Make sure the drain you are
forwarding is formatted this way (see example in [Saving Custom Log
Formats](/als/v1/admin/server/logging/#logging-drains-save-format)).

## Loggly {#loggly}

1.  [Create an account for Loggly](https://app.loggly.com/)
2.  Under *Incoming Data* tab, click *Add Input*.
	<img src="media/loggly1.png" />
3.  In the Add Input screen:
	-   Choose *Syslog UDP or TCP*
	-   Choose *Combination Log Type*
	-   [Optional] For JSON Logging, Choose UDP or TCP **with Stripe** and enable **JSON Logging**. (for system logs)
	<img src="media/loggly2.png" />
4.  If we want to accept logs from any Application Lifecycle Service nodes or applications modify Allowed Devices section:
	-   Click *Add device*
	 <img src="media/loggly3.png" />
	-   Add IP Address 0.0.0.0/0 when prompted
	 <img src="media/loggly4.png" />
5.  Turn off discovery since we allowed all devices. Also, note down the
    **port number**.
	 <img src="media/loggly5.png" />
6. Enable system logging by executing **one** of the following kato commands:

    	kato log drain add drain-name udp://logs.loggly.com:port#

    	kato log drain add drain-name tcp://logs.loggly.com:port#

Loggly supports JSON format with minor configuration changes shown above. Enable system JSON logging by executing the following kato command:

    kato log drain add --format json drain-name tcp://logs.loggly.com:port#


## Splunk {#splunk}

1.  [Set up Splunk Server](http://www.splunk.com/download).
2.  In the welcome screen, click *Add data*
	<img src="media/splunk1.png" />
3.  Under *Choose a Data Source*, click **From a TCP port** (or UDP)<br /><img src="media/splunk2.png"/>

1. In the **Add New Source** screen:
	-   Select a TCP/UDP port greater than **9999**
	-   Give it a suitable **Source name**.
	-   Set sourcetype to **Manual**
	-   Leave Source Type **empty**
	<img src="media/splunk3.png" />
5. Enable system logging by executing **one** of the following kato commands:

    	kato log drain add drain-name splunk-server-address:port#

    	kato log drain add drain-name tcp://splunk-server-address:port#

Splunk supports JSON format without further configuration. Enable system JSON logging by executing the following kato command:

    kato log drain add --format json drain-name tcp://splunk-server-address:port#

## Hello World Custom Drain {#hello-world-custom-drain}

The command below starts a drain target server on a node and pipes it to a local file:

    nc -lk 0.0.0.0 10000 > log-output.txt

As long as that nc command runs, this will funnel logs from all drains, targeting it into the file log-output.txt

Enable system logging by executing **one** of the following kato commands:

    kato log drain add drain-name udp://server-address:port#
	kato log drain add drain-name tcp://server-address:port#
